npm isntall -g nodemon -> install the packaegs of nodemon 

npm install --save nodemon --> Install nodemon in the project

res.send() -> Retorna uma string

app.get('/', (req, res)) {} -> get na raÃ­z 

CORS -> Blocks made by the browsers in order to prevent unsafe endpoints. It's a security way. 
`npm i cors -S` -> the "-S" means 'save', because it will save the cors as a dependency of the project. Always when someone clone the project and install the npm, this dependency will be included. 

`npm i https -S` -> Allow us to call our Api using https too. Many browsers, when call the api in the front-end, do not accept requirements of Apis with endpoints http. Just https.  


`npm i fs -S` -> file system. Allows the manipulation of files and directories in our application from Node. 

SSL -> SSL certificates are what enable websites to use HTTPS, which is more secure than HTTP. It's standard technology for securing an internet connection by encrypting data sent between a website and a browser (or between two servers).

// 443 default SSL port. Maybe in our machines this port might be blocked for security reasons. This port is opened in a server to provide access to the client.   
In our case someone who access it in the https port will see a warning message saying that this connection is not safe. It happens because the certificate we generated is free and anyone can generate that. So, it's not a credential certificate generated by a company that certificates that our connection is safe. In a business context, a trust company provides that SSL certificate for us or the hosting service company provides that too and then, we will be able to use the https connection. 